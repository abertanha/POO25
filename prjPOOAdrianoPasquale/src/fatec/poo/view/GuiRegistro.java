package fatec.poo.view;

import fatec.poo.control.DaoHospede;
import fatec.poo.control.DaoQuarto;
import fatec.poo.control.DaoRecepcionista;
import fatec.poo.control.DaoRegistro;
import fatec.poo.control.PreparaConexao;
import fatec.poo.model.Registro;
import java.text.ParseException;
import javax.swing.text.MaskFormatter;
import fatec.poo.model.Hospede;
import fatec.poo.model.Quarto;
import fatec.poo.model.Recepcionista;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 *
 * @author shenmue
 */
public class GuiRegistro extends javax.swing.JFrame {

    /**
     * Creates new form GuiRegistro
     */
    public GuiRegistro() throws ParseException {
        initComponents();
        MaskFormatter maskData = new MaskFormatter("##/##/####");
        MaskFormatter maskDataCPF = new MaskFormatter("###.###.###-##");
        maskDataCPF.install(ftfCPFHosp);
        maskData.install(ftfDataEntrada);
        maskData.install(ftfDataSaida);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCodReg = new javax.swing.JTextField();
        txtRegFunc = new javax.swing.JTextField();
        txtNoQuarto = new javax.swing.JTextField();
        txtValHospedagem = new javax.swing.JTextField();
        btnConsultar = new javax.swing.JButton();
        txtRecepcionista = new javax.swing.JTextField();
        btnConRecep = new javax.swing.JButton();
        btnConHosp = new javax.swing.JButton();
        txtHospede = new javax.swing.JTextField();
        txtSituacaoQuarto = new javax.swing.JTextField();
        btnConSitQuarto = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnReservar = new javax.swing.JButton();
        btnLiberar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        ftfCPFHosp = new javax.swing.JFormattedTextField();
        ftfDataEntrada = new javax.swing.JFormattedTextField();
        ftfDataSaida = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro Hospedagem");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Código");

        jLabel2.setText("Registro Funcional");

        jLabel3.setText("CPF Hóspede");

        jLabel4.setText("No. Quarto");

        jLabel5.setText("Data entrada");

        jLabel6.setText("Data saída");

        jLabel7.setText("Valor Hospedagem");

        txtCodReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodRegActionPerformed(evt);
            }
        });

        txtValHospedagem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/pesq.png"))); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        txtRecepcionista.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnConRecep.setText("...");
        btnConRecep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConRecepActionPerformed(evt);
            }
        });

        btnConHosp.setText("...");
        btnConHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConHospActionPerformed(evt);
            }
        });

        txtHospede.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHospedeActionPerformed(evt);
            }
        });

        txtSituacaoQuarto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnConSitQuarto.setText("...");
        btnConSitQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConSitQuartoActionPerformed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Situação");

        btnReservar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/add.png"))); // NOI18N
        btnReservar.setText("Reservar");
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        btnLiberar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/rem.png"))); // NOI18N
        btnLiberar.setText("Liberar");
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/exit.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtValHospedagem, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(ftfDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtRegFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtNoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(ftfCPFHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(26, 26, 26)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(btnConRecep, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(btnConHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtCodReg, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(27, 27, 27)
                                            .addComponent(btnConsultar)))
                                    .addComponent(ftfDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnConSitQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSituacaoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRecepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(btnReservar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLiberar)
                        .addGap(18, 18, 18)
                        .addComponent(btnSair)
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRegFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRecepcionista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConRecep, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfCPFHosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSituacaoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConSitQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ftfDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ftfDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtValHospedagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReservar)
                    .addComponent(btnLiberar)
                    .addComponent(btnSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConRecepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConRecepActionPerformed
        int regFunc;
        try{
            regFunc = Integer.parseInt(txtRegFunc.getText());
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Registro Funcional inválido.","Erro de entrada", JOptionPane.ERROR_MESSAGE);
            txtRegFunc.setText("");
            txtRegFunc.requestFocus();
            return;
        }
        
        recepcionista = daoRecepcionista.consultar(regFunc);
        
        if(recepcionista == null) {
            JOptionPane.showMessageDialog(null,"Recepcionista não cadastrado.","Aviso", JOptionPane.WARNING_MESSAGE);
            txtRegFunc.setText("");
            txtRegFunc.requestFocus();
        } else {
            txtRecepcionista.setText(recepcionista.getNome());
            
            int codigoRegistro = Integer.parseInt(txtCodReg.getText());
            registro = new Registro(codigoRegistro, LocalDate.now(), recepcionista);
            
            formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            ftfDataEntrada.setText(registro.getDataEntrada().format(formatter));
            
            txtRegFunc.setEnabled(false);
            btnConRecep.setEnabled(false);
            ftfCPFHosp.setEnabled(true);
            btnConHosp.setEnabled(true);
            ftfCPFHosp.requestFocus();
        }
    }//GEN-LAST:event_btnConRecepActionPerformed

    private void btnConHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConHospActionPerformed
        String cpf = ftfCPFHosp.getText().replace(".","").replace("-","");
        if(cpf.trim().isEmpty() || !Hospede.validarCPF(cpf)){
            JOptionPane.showMessageDialog(null, "CPF do Hóspede inválido.","Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            ftfCPFHosp.requestFocus();
            return;
        }
        
        hospede = daoHospede.consultar(cpf);
        
        if(hospede == null){
            JOptionPane.showMessageDialog(null, "Hóspede não cadastrado.","Aviso",JOptionPane.WARNING_MESSAGE);
            ftfCPFHosp.setText("");
            ftfCPFHosp.requestFocus();
        } else {
            txtHospede.setText(hospede.getNome());
            
            ftfCPFHosp.setEnabled(false);
            btnConHosp.setEnabled(false);
            txtNoQuarto.setEnabled(true);
            btnConSitQuarto.setEnabled(true);
            txtNoQuarto.requestFocus();            
        }
    }//GEN-LAST:event_btnConHospActionPerformed

    private void btnConSitQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConSitQuartoActionPerformed
        int numQuarto;
        try{
            numQuarto = Integer.parseInt(txtNoQuarto.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Número do quarto inválido","Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            txtNoQuarto.setText("");
            txtNoQuarto.requestFocus();
            return;
        }
        
        quarto = daoQuarto.consultar(numQuarto);
        
        if(quarto == null){
            JOptionPane.showMessageDialog(null, "Quarto não cadastrado.", "Aviso",JOptionPane.WARNING_MESSAGE);
            txtNoQuarto.setText("");
            txtNoQuarto.requestFocus();
        } else {
            if(quarto.getSituacao()){
                JOptionPane.showMessageDialog(null, "Quarto já está ocupado.","Aviso",JOptionPane.WARNING_MESSAGE);
                txtNoQuarto.setText("");
                txtNoQuarto.requestFocus();
            } else {
                txtSituacaoQuarto.setText("Livre");
                
                registro.reservarQuarto(hospede, quarto);
                
                txtNoQuarto.setEnabled(false);
                btnConSitQuarto.setEnabled(false);
                
                btnReservar.setEnabled(true);
                btnReservar.requestFocus();
            }
        }
    }//GEN-LAST:event_btnConSitQuartoActionPerformed

    private void txtCodRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodRegActionPerformed

    private void txtHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHospedeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHospedeActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       prepCon = new PreparaConexao("BD2321026","BD2321026");
       prepCon.setDriver("oracle.jdbc.driver.OracleDriver");
       prepCon.setConnectionString("jdbc:oracle:thin:@192.168.1.6:1521:xe");        
       daoRegistro = new DaoRegistro(prepCon.abrirConexao());
       
       daoRecepcionista = new DaoRecepcionista(prepCon.abrirConexao());
       daoHospede = new DaoHospede(prepCon.abrirConexao());
       daoQuarto = new DaoQuarto(prepCon.abrirConexao()); 
       
       txtCodReg.setText("");
       txtRegFunc.setText("");
       ftfCPFHosp.setText("");
       txtNoQuarto.setText("");
       ftfDataEntrada.setText("");
       ftfDataSaida.setText("");
       txtValHospedagem.setText("");
       txtRecepcionista.setText("");
       txtHospede.setText("");
       txtSituacaoQuarto.setText("");
        
       txtCodReg.setEnabled(true);
       txtRegFunc.setEnabled(false);
       ftfCPFHosp.setEnabled(false);
       txtNoQuarto.setEnabled(false);
       ftfDataEntrada.setEnabled(false);
       ftfDataSaida.setEnabled(false);
       txtRecepcionista.setEnabled(false);
       txtHospede.setEnabled(false);
       txtSituacaoQuarto.setEnabled(false);
       txtValHospedagem.setEnabled(false);
       
       btnConsultar.setEnabled(true);
       btnReservar.setEnabled(false);
       btnLiberar.setEnabled(false);
       btnConRecep.setEnabled(false);
       btnConHosp.setEnabled(false);
       btnConSitQuarto.setEnabled(false);
        
       txtCodReg.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        int codigo;
        try{
            codigo = Integer.parseInt(txtCodReg.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Código de Registro inválido. Informe um número inteiro.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            txtCodReg.setText("");
            txtCodReg.requestFocus();
            return;
        }
        
        registro = daoRegistro.consultar(codigo);
        
        if(registro == null) {
            btnConsultar.setEnabled(false);
            txtCodReg.setEnabled(false);
            
            txtRegFunc.setEnabled(true);
            btnConRecep.setEnabled(true);
            txtRegFunc.requestFocus();
            
        } else {
            hospede = registro.getHospede();
            recepcionista = registro.getRecepcionista();
            quarto = registro.getQuarto();
            
            txtRegFunc.setText(String.valueOf(recepcionista.getRegFunc()));
            txtRecepcionista.setText(recepcionista.getNome());
            ftfCPFHosp.setText(hospede.getCpf());
            txtHospede.setText(hospede.getNome());
            txtNoQuarto.setText(String.valueOf(quarto.getNumero()));
            txtSituacaoQuarto.setText(quarto.getSituacao() == true ? "Ocupado" : "Livre");
            formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            ftfDataEntrada.setText(registro.getDataEntrada().format(formatter));
            
            txtCodReg.setEnabled(false);
            btnConsultar.setEnabled(false);
            
            if(registro.getDataSaida() == null) {
                ftfDataSaida.setEnabled(true);
                btnLiberar.setEnabled(true);
                ftfDataSaida.requestFocus();
            } else {
                ftfDataSaida.setText(registro.getDataSaida().format(formatter));
                txtValHospedagem.setText(String.format("%.2f",registro.getValorHospedagem()));
                ftfDataSaida.setEnabled(false);
                btnLiberar.setEnabled(false);            
            }
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        daoRegistro.inserir(registro);
        daoQuarto.alterar(registro.getQuarto());
        
        JOptionPane.showMessageDialog(null, "Reserva efetuada com sucesso!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
        
        txtCodReg.setText("");
        txtRegFunc.setText("");
        ftfCPFHosp.setText("");
        txtNoQuarto.setText("");
        ftfDataEntrada.setText("");
        ftfDataSaida.setText("");
        txtValHospedagem.setText("");
        txtRecepcionista.setText("");
        txtHospede.setText("");
        txtSituacaoQuarto.setText("");
        
        txtCodReg.setEnabled(true);
        txtRegFunc.setEnabled(false);
        ftfCPFHosp.setEnabled(false);
        txtNoQuarto.setEnabled(false);
        ftfDataEntrada.setEnabled(false);
        ftfDataSaida.setEnabled(false);
        
        btnConsultar.setEnabled(true);
        btnReservar.setEnabled(false);
        btnLiberar.setEnabled(false);
        btnConRecep.setEnabled(false);
        btnConHosp.setEnabled(false);
        btnConSitQuarto.setEnabled(false);
        
        txtCodReg.requestFocus();
    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed
        LocalDate dataSaida;
        formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        
        try {
            dataSaida = LocalDate.parse(ftfDataSaida.getText(), formatter);
        } catch (java.time.format.DateTimeParseException e) {
            JOptionPane.showMessageDialog(null, "Formata de data inválido. Use dd/mm/aaaa.","Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            ftfDataSaida.requestFocus();
            return;
        }
        
        if(dataSaida.isBefore(registro.getDataEntrada()) || dataSaida.isEqual(registro.getDataEntrada())){
           JOptionPane.showMessageDialog(null, "A data de saída deve ser posterior à data de entrada.", "Erro de validação",JOptionPane.ERROR_MESSAGE);
           ftfDataSaida.requestFocus();
           return;
        }
        
        registro.setDataSaida(dataSaida);
        
        double valorAPagar = registro.liberarQuarto();
        txtValHospedagem.setText(String.format("%.2f", valorAPagar));
        
        daoRegistro.alterar(registro);
        daoQuarto.alterar(registro.getQuarto());
        
        ftfDataSaida.setEnabled(false);
        btnLiberar.setEnabled(false);
        
        JOptionPane.showMessageDialog(null, "Quarto liberado com sucesso!","Confirmação", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnLiberarActionPerformed

    private PreparaConexao prepCon;
    private DaoRegistro daoRegistro;
    private DaoRecepcionista daoRecepcionista;
    private DaoHospede daoHospede;
    private DaoQuarto daoQuarto;
    private Registro registro;
    private Hospede hospede;
    private Quarto quarto;
    private Recepcionista recepcionista;
    private DateTimeFormatter formatter;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConHosp;
    private javax.swing.JButton btnConRecep;
    private javax.swing.JButton btnConSitQuarto;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnLiberar;
    private javax.swing.JButton btnReservar;
    private javax.swing.JButton btnSair;
    private javax.swing.JFormattedTextField ftfCPFHosp;
    private javax.swing.JFormattedTextField ftfDataEntrada;
    private javax.swing.JFormattedTextField ftfDataSaida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtCodReg;
    private javax.swing.JTextField txtHospede;
    private javax.swing.JTextField txtNoQuarto;
    private javax.swing.JTextField txtRecepcionista;
    private javax.swing.JTextField txtRegFunc;
    private javax.swing.JTextField txtSituacaoQuarto;
    private javax.swing.JTextField txtValHospedagem;
    // End of variables declaration//GEN-END:variables
}
